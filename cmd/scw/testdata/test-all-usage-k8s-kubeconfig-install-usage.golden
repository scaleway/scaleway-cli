🎲🎲🎲 EXIT CODE: 0 🎲🎲🎲
🟥🟥🟥 STDERR️️ 🟥🟥🟥️
Retrieve the kubeconfig for a specified cluster and write it on disk. 
It will merge the new kubeconfig in the file pointed by the KUBECONFIG variable. If empty it will default to $HOME/.kube/config.

USAGE:
  scw k8s kubeconfig install <cluster-id ...> [arg=value ...]

EXAMPLES:
  Install the kubeconfig for a given cluster and using the new context
    scw k8s kubeconfig install 11111111-1111-1111-1111-111111111111

  Get the kubeconfig for a given cluster by copying current secret_key to it
    scw k8s kubeconfig install 11111111-1111-1111-1111-111111111111 auth-method=copy-cli-token

  Get the kubeconfig for a given cluster and use legacy authentication
    scw k8s kubeconfig install 11111111-1111-1111-1111-111111111111 auth-method=legacy

ARGS:
  cluster-id               Cluster ID from which to retrieve the kubeconfig
  [auth-method=cli]        Which method to use to authenticate using kubelet (cli | copy-cli-token | legacy)
  [keep-current-context]   Whether or not to keep the current kubeconfig context unmodified
  [region=fr-par]          Region to target. If none is passed will use default region from the config

FLAGS:
  -h, --help   help for install

GLOBAL FLAGS:
  -c, --config string    The path to the config file
  -D, --debug            Enable debug mode
  -o, --output string    Output format: json or human, see 'scw help output' for more info (default "human")
  -p, --profile string   The config profile to use

SEE ALSO:
  # Uninstall a kubeconfig
  scw k8s kubeconfig uninstall
