üé≤üé≤üé≤ EXIT CODE: 0 üé≤üé≤üé≤
üü•üü•üü• STDERRÔ∏èÔ∏è üü•üü•üü•Ô∏è
Create an instance server.

USAGE:
  scw instance server create [arg=value ...]

EXAMPLES:
  Create and start an instance on Ubuntu Focal
    scw instance server create image=ubuntu_focal

  Create a GP1-XS instance, give it a name and add tags
    scw instance server create image=ubuntu_focal type=GP1-XS name=foo tags.0=prod tags.1=blue

  Create an instance with 2 additional block volumes (50GB and 100GB)
    scw instance server create image=ubuntu_focal additional-volumes.0=block:50GB additional-volumes.1=block:100GB

  Create an instance with 2 local volumes (10GB and 10GB)
    scw instance server create image=ubuntu_focal root-volume=local:10GB additional-volumes.0=local:10GB

  Create an instance with a SBS root volume (100GB and 15000 iops)
    scw instance server create image=ubuntu_focal root-volume=sbs:100GB:15000

  Create an instance with volumes from snapshots
    scw instance server create image=ubuntu_focal root-volume=local:<snapshot_id> additional-volumes.0=block:<snapshot_id>

  Create and start an instance from a snapshot
    scw instance server create image=none root-volume=local:<snapshot_id>

  Create and start an instance using existing volume
    scw instance server create image=ubuntu_focal additional-volumes.0=<volume_id>

  Use an existing IP
    ip=$(scw instance ip create | grep id | awk '{ print $2 }')
    scw instance server create image=ubuntu_focal ip=$ip

ARGS:
  image=ubuntu_jammy                       Image ID or label of the server
  type                                     Server commercial type (help: https://www.scaleway.com/en/docs/compute/instances/reference-content/choosing-instance-type/)
  [name=<generated>]                       Server name
  [root-volume]                            Local root volume of the server
  [additional-volumes.{index}]             Additional local and block volumes attached to your server
  [ip=new]                                 Either an IP, an IP ID, ('new', 'ipv4', 'ipv6' or 'both') to create new IPs, 'dynamic' to use a dynamic IP or 'none' for no public IP (new | ipv4 | ipv6 | both | dynamic | none | <id> | <address>)
  [dynamic-ip-required=true]               Define if a dynamic IPv4 is required for the Instance. If server has no IPv4, a dynamic one will be allocated.
  [tags.{index}]                           Server tags
  [ipv6]                                   Enable IPv6, to be used with routed-ip-enabled=false
  [stopped]                                Do not start server after its creation
  [security-group-id]                      The security group ID used for this server
  [placement-group-id]                     The placement group ID in which the server has to be created
  [cloud-init]                             The cloud-init script to use (Support file loading with @/path/to/file)
  [boot-type=local]                        The boot type to use, if empty the local boot will be used. Will be overwritten to bootscript if bootscript-id is set. (local | bootscript | rescue)
  [admin-password-encryption-ssh-key-id]   ID of the IAM SSH Key used to encrypt generated admin password. Required when creating a windows server.
  [project-id]                             Project ID to use. If none is passed the default project ID will be used
  [zone=fr-par-1]                          Zone to target. If none is passed will use default zone from the config (fr-par-1 | fr-par-2 | fr-par-3 | nl-ams-1 | nl-ams-2 | nl-ams-3 | pl-waw-1 | pl-waw-2 | pl-waw-3)
  [organization-id]                        Organization ID to use. If none is passed the default organization ID will be used

FLAGS:
  -h, --help   help for create
  -w, --wait   wait until the server is ready
      --web    open console page for the current ressource

GLOBAL FLAGS:
  -c, --config string    The path to the config file
  -D, --debug            Enable debug mode
  -o, --output string    Output format: json or human, see 'scw help output' for more info (default "human")
  -p, --profile string   The config profile to use
  -y, --yes              Automatically confirm all interactive prompts

SEE ALSO:
  # List marketplace label images
  scw marketplace image list
